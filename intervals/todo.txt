Figure out why we're failing to sync with more than about +/- 0.015% (4 of 256 works, 8 of 256 stalls eventually, 16 of 256 stalls after a little while)
  Problem is that at extremes of frequency difference (parent fast, child slow) even with a correct sync we still get out of sync during data transfer
    Add NOPs so we have a 5 cycle per bit read and write loop
      Adjust prime timings correspondingly


Allow connection/disconnection when not in good state

vary the clock speed according to a normal distribution - gradually increase the standard deviation and see when it breaks
  Are the clock speeds of real PIC12F508s normal or uniform?
    Write code for the programmer code and speed tester (ideal speed should be 1/3 MHz)

Make simulator.cpp output diagrams like timings.txt

When the hardware doesn't work:
  Check that MOVWL OSCCAL works correctly when it isn't the first (second) instruction executed
  Get something simpler working
  Run timing tests (make sure MOVWF PCL takes one cycle)

Speed up the program - should be able to get nearly 50% increase by:
  Read all the pins at once
  Put a high pause in the middle of the write cycle to reduce the maximum low time during data transfer
  Reduce the prime check wait time
