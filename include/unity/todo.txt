file.h:
  Wildcard test for Unix port of Directory::applyToContents
  Implement applyToWildcard()
    Refactor with parse
  Re-implement crc32 with new tools
  Implement runrandom

Some kind of class to hold all the static Strings and avoid duplication between their different instances?

What characters are actually legal in server names?

What characters are actually legal in share names?

In paths starting \\?\, only \ and \\ are allowed separators, and ?*:"<> are allowed.
see http://docs.racket-lang.org/reference/windowspaths.html for more details

Use \\?\ to avoid MAX_PATH limit?
If we do this we need to know the current drive - this is the first character of CurrentDirectory().windowsPath() .

Improve the path parsing error messages

On Windows, use GetCommandLineW() to retrieve command line

When parsing paths, should we use:
  getCodePoint() so that Unix paths can contain 0x0a and 0x0d bytes? or
  get() so that error messages contain the correct line and column number?
    Or make getCodePoint() increase _line/_column appropriately?

CharacterSource currently only returns sensible _line/_column if it is started at the start of file contents
  Really want to get good locations even for substrings - should SimpleString have a _line/_column?

We should be using substitution into templates instead of concatenation for globalization purposes.

String::codePoint()
  10 -> "new line"
  32 -> "space"
?
