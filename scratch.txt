How do we deal with the problem that {} can delimit either a compound statement
 or a compound expression?
  If we just try both then we have O(2^N) behavior in the case of N nested {}s.
  Have a "CompoundStatementOrExpression" that can be converted to either
   CompoundStatement or CompoundExpression depending on how it turns out, so
   its contents don't need to be re-parsed when it is converted.

Bitmap:
  A Bitmap may own its own bits or just be a pointer into some other Bitmap's
  bits.
  Preserve that information with a flag or with

Want to be able to write "offset = (outputSize - inputSize)/2;" in config files

We want the TypeConverter to be able to create its own Conversions by
 combining the Conversions passed to it. This way, programmers don't have to
 write a Conversion for every possible pair of types that we might want to
 convert between. We can do this with dynamic programming.

Creating a new type might change the Conversion for a pair of types - that's
 ok. Allowing the instantiation of a template to do the same seems
 potentially error prone (but might be more logical).

We need to be careful not to try unbounded conversion paths.
 e.g. if we can convert F<T> to F<F<T>>.

