; This is the bootstrapping compiler step 8 (written in step 7 language)
; I've refactored out some common routines (read and write)
; and used static variables instead of stack variables to improve
; control flow. I've also added the ability to have literal strings
; (delimited by "s).

0E       ;   PUSH CS
1F       ;   POP DS
BE8200   ;   MOV SI,082
89F2     ;   MOV DX,SI
.A       ; fnloop1:
AC       ;   LODSB
3C20     ;   CMP AL,020
75@A     ;   JNE fnloop1
30DB     ;   XOR BL,BL
885CFF   ;   MOV B[SI-1],BL
89F7     ;   MOV DI,SI
.B       ; fnloop2:
AC       ;   LODSB
3C0D     ;   CMP AL,0d
75@B     ;   JNE fnloop2
885CFF   ;   MOV B[SI-1],BL

B8003D   ;   MOV AX,03d00
CD21     ;   INT 021
72@C     ;   JC fin2
A3*a     ;   MOV [.a],AX   ; read handle

B43C     ;   MOV AH,03c
31C9     ;   XOR CX,CX
89FA     ;   MOV DX,DI
CD21     ;   INT 021
73@D     ;   JNC nofin
.C       ; fin2:
E9#S     ;   JMP fin
.D       ; nofin:
A3*b     ;   MOV [.b],AX   ; write handle

31C0     ;   XOR AX,AX
A3*c     ;   MOV [.c],AX   ; phase
.E       ; phase_top:
B80001   ;   MOV AX,0100
A3*d     ;   MOV [.d],AX   ; current address

31C0     ;   XOR AX,AX
A3*e     ;   MOV [.e],AX   ; high nybble flag
A3*f     ;   MOV [.f],AX   ; high nybble

.F       ; looptop:
E8#r     ;   CALL read

3C3B     ;   CMP AL,3B
75@J     ;   JNZ nocomment
.I       ; comment:
E8#r     ;   CALL read       ; this is a comment
3C0D     ;   CMP AL,0D
75@I     ;   JNZ comment
E9#F     ;   JMP looptop

.J       ; nocomment:
3C2E     ;   CMP AL,02e
75@K     ;   JNZ not_target
E8#r     ;   CALL read       ; this is a label target
30E4     ;   XOR AH,AH
D1E0     ;   SHL AX,1
05*Z     ;   ADD AX,offset symtab
89C3     ;   MOV BX,AX
A1*d     ;   MOV AX,[.d]     ; IP
8907     ;   MOV W[BX],AX    ; save symbol location
E9#F     ;   JMP looptop
         ;
.K       ; not_target:
3C40     ;   CMP AL,040
75@T     ;   JNZ not_short
E8#r     ;   CALL read       ; this is a short jump
30E4     ;   XOR AH,AH
D1E0     ;   SHL AX,1
05*Z     ;   ADD AX,offset symtab
89C3     ;   MOV BX,AX
8B17     ;   MOV DX,W[BX]
2B16*d   ;   SUB DX,[.d]     ; IP
4A       ;   DEC DX
E8#W     ;   CALL check_short
B90100   ;   MOV CX,1
E8#w     ;   CALL write      ; write the jump byte
E9#F     ;   JMP looptop

.T       ; not_short:
3C23     ;   CMP AL,023
75@V     ;   JNZ not_near
E8#r     ;   CALL read       ; this is a near jump
30E4     ;   XOR AH,AH
D1E0     ;   SHL AX,1
05*Z     ;   ADD AX,offset symtab
89C3     ;   MOV BX,AX
8B17     ;   MOV DX,W[BX]
2B16*d   ;   SUB DX,[.d]     ; IP
4A       ;   DEC DX
4A       ;   DEC DX
B90200   ;   MOV CX,2
E8#w     ;   CALL write      ; write the jump word
EB@F     ;   JMP looptop

.V       ; not_near:
3C2A     ;   CMP AL,02a
75@G     ;   JNZ not_absolute
E8#r     ;   CALL read       ; this is an absolute label reference
30E4     ;   XOR AH,AH
D1E0     ;   SHL AX,1
05*Z     ;   ADD AX,offset symtab
89C3     ;   MOV BX,AX
8B17     ;   MOV DX,W[BX]
B90200   ;   MOV CX,2
E8#w     ;   CALL write      ; write the address word
E9#F     ;   JMP looptop

.G       ; not_absolute
3C22     ;   CMP AL,022
75@L     ;   JNZ not_string
.O       ; stringtop:
E8#r     ;   CALL read       ; this is a string literal
3C22     ;   CMP AL,022
74@Q     ;   JE looptop2
88C2     ;   MOV DL,AL
B90100   ;   MOV CX,1
E8#w     ;   CALL write      ; write the character
EB@O     ;   JMP stringtop

.L       ; not_string:
3C30     ;   CMP AL,030
7C@Q     ;   JL looptop2
3C39     ;   CMP AL,039
7E@N     ;   JLE number
3C41     ;   CMP AL,041
7C@Q     ;   JL looptop2
3C46     ;   CMP AL,046
7E@M     ;   JLE capital
3C61     ;   CMP AL,061
7C@Q     ;   JL looptop2
3C66     ;   CMP AL,066
7F@Q     ;   JG looptop2
2C20     ;   SUB AL,020
.M       ; capital:
2C07     ;   SUB AL,7
.N       ; number:
2C30     ;   SUB AL,030
8A16*f   ;   MOV DL,[.f]   ; high nybble
D0E2     ;   SHL DL,1
D0E2     ;   SHL DL,1
D0E2     ;   SHL DL,1
D0E2     ;   SHL DL,1
08C2     ;   OR DL,AL
8816*f   ;   MOV [.f],DL   ; high nybble
8036*e01 ;   XOR [.e],1
75@Q     ;   JNZ looptop2
B90100   ;   MOV CX,1
E8#w     ;   CALL write

.Q       ; looptop2:
E9#F     ;   JMP looptop
.R       ; next_phase:
B80042   ;   MOV AX,04200
8B1E*a   ;   MOV BX,[.a]      ; read handle
31C9     ;   XOR CX,CX
31D2     ;   XOR DX,DX
CD21     ;   INT 021      ; seek to beginning of file
         ;
FE06*c   ;   INC B[.c]
803E*c02 ;   CMP B[.c],2
7D@S     ;   JGE fin
E9#E     ;   JMP phase_top

.S       ; fin:
B44C     ;   MOV AH,04C
CD21     ;   INT 021          ; exit

; Read 1 byte from source, return byte in AL
; on EOF go to next_phase instead of returning.
.r       ; read:
B43F     ;   MOV AH,03f
8B1E*a   ;   MOV BX,[.a]      ; read handle
B90100   ;   MOV CX,1
BA*g     ;   MOV DX,offset .g ; data buffer
CD21     ;   INT 021
85C0     ;   TEST AX,AX
75@H     ;   JNZ read_ok
5A       ;   POP DX           ; return address
E9#R     ;   JMP next_phase
.H       ; read_ok:
A0*g     ;   MOV AL,B[.g]     ; data buffer
C3       ;   RET

; Write CX bytes from DX if in phase 1
; Increment IP counter by CX
.w       ; write:
8916*g   ;   MOV W[.g],DX     ; data buffer
010E*d   ;   ADD W[.d],CX     ; IP
833E*c00 ;   CMP W[.c],0      ; phase
74@s     ;   JZ skip_write
B440     ;   MOV AH,040
8B1E*b   ;   MOV BX,[.b]      ; write handle
BA*g     ;   MOV DX,offset .g ; data buffer
CD21     ;   INT 021
.s       ; skip_write:
C3       ;   RET

; Check to see if DX fits in a signed 8-bit integer
; If not, prints an error message and exits.
.W       ; check_short:
833E*c00 ;   CMP W[.c],0      ; phase
74@X     ;   JZ short_ok
89D0     ;   MOV AX,DX
98       ;   CBW
39D0     ;   CMP AX,DX
74@X     ;   JZ short_ok
B409     ;   MOV AH,09
BA*Y     ;   MOV DX,offset error_msg
CD21     ;   INT 021
B402     ;   MOV AH,02
8A16*g   ;   MOV DL,[.g]      ; data buffer (will contain label that caused error)
CD21     ;   INT 021
EB@S     ;   JMP fin
.X       ; short_ok:
C3       ;   RET

.a 0000  ; read handle
.b 0000  ; write handle
.c 0000  ; phase
.d 0000  ; current IP
.e 0000  ; high nybble flag
.f 0000  ; high nybble
.g 0000  ; data to output


.Y       ; error_msg:
546F6F2066617220746F206C6162656C2024
         ;   "Too far to label $"

.Z       ; symtab:  (256 scratch words)
