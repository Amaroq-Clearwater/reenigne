Time ms = second/1000;
Time hdot = 44*ms/630000;  // 14.318MHz

Intel8088CPU cpu;
cpu.frequency = 1/(3*hdot);  // 4.77MHz

ISA8BitBus bus; bus.cpu = cpu;

Int kB = 2^10;

ISA8BitRAM ram;
// ram.rowBits is 7 for 4116 RAM chips
//                8 for 4164
//                9 for 41256
// We use 9 here because programs written for rowBits == N will work
// for rowBits < N but not necessarily rowBits > N.
ram.rowBits = 9;
ram.bytes = 640*kB;  // should be enough for anyone.
// Real hardware can work with a decay time as short as hdot*12*18<<ram.rowBits
ram.decayTime = (4*ms / 256) << ram.rowBits;
bus.slot = ram.bus;

Intel8237DMAC dmac;                bus.chip0 = dmac.bus;
Intel8259PIC pic;                  bus.chip1 = pic.bus;
Intel8253PIT pit;                  bus.chip2 = pit.bus;
Intel8255PPI ppi;                  bus.chip3 = ppi.bus;
DMAPageRegisters dmaPageRegisters; bus.chip4 = dmaPageRegisters.bus;
NMISwitch nmiSwitch;               bus.chip5 = nmiSwitch.bus;

pit.frequency = cpu.frequency/4;  // 1.193MHz

PCXTKeyboardPort keyboardPort;
ppi.a = keyboardPort.data;
ppi.b7 = keyboardPort.clear;
ppi.b6 = keyboardPort.clock;
pic.irq1 = keyboardPort.irq;

PCXTKeyboard keyboard; keyboardPort = keyboard;

IBMCGA cga; bus.slot = cga.bus;
cga.frequency = 1/hdot;
cga.rom = "../../external/8088/roms/5788005.u33";

RAM cgaRam;
cgaRam.rowBits = 7;
cgaRam.bytes = 16*kB;
cgaRam.decayTime = 2*ms;
cga.ram = cgaRam.bus;

RGBIMonitor monitor;
cga.rgbiOutput = monitor;

SRLatch cardParityError;
ppi.c6 = cardParityError.output;
cardParityError.set = bus.parityError;
cardParityError.reset = ppi.b5;

SRLatch boardParityError;
ppi.c7 = boardParityError.output;
boardParityError.set = ram.parityError;
boardParityError.reset = ppi.b4;

cpu.nmi = nmiSwitch & ((n_p_npi & n_p_instlsw) |
    boardParityError.output | cardParityError.output);

